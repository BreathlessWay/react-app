"use strict";function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}var precacheConfig=[["https://breathlessway.github.io/react-app/index.html","ca9edc75f3dc8be6ae735deb0a6a2073"],["https://breathlessway.github.io/react-app/static/css/main.2b118411.css","f7f52c6ce4adfc433b182012c539a4b7"],["https://breathlessway.github.io/react-app/static/js/detail.8a58356d.chunk.js","f61a4100ed6ecef22d28439c938207c7"],["https://breathlessway.github.io/react-app/static/js/entry.21eb1a0f.chunk.js","ab5cc11008e637b7e8c047078514ddf2"],["https://breathlessway.github.io/react-app/static/js/home.c851d3ed.chunk.js","1b1a5573e08b839c2809e4dcaf0f2a07"],["https://breathlessway.github.io/react-app/static/js/main.e94eed19.js","d649d049e16a0b991f286e791ac48ddd"],["https://breathlessway.github.io/react-app/static/js/message.d1908c2e.chunk.js","fd6ddba9ecd6b4a0aba4d013531c9e0b"],["https://breathlessway.github.io/react-app/static/js/not-found.875c33d7.chunk.js","80388ed399d7a9cb058ac7e91b2c3b38"],["https://breathlessway.github.io/react-app/static/js/other.e341a1cc.chunk.js","171d9291bb1db675baa89461aa1f0426"],["https://breathlessway.github.io/react-app/static/js/topic.f1b146ac.chunk.js","5874c71b0b31abb9be05b4c6d1fa735f"],["https://breathlessway.github.io/react-app/static/js/user.ab54e3e8.chunk.js","536be73c4ccd7800bddb36459dd45894"],["https://breathlessway.github.io/react-app/static/media/avatar.75fbacb2.jpeg","75fbacb2b8cc8d806d1fdd0c19fa19c5"],["https://breathlessway.github.io/react-app/static/media/cnodejs_light.86f6a7c2.svg","86f6a7c2f6cf9844d8a9f5d088d87406"],["https://breathlessway.github.io/react-app/static/media/iconfont.049ebd2c.svg","049ebd2c2a8b7d82f648b489fb93b51b"],["https://breathlessway.github.io/react-app/static/media/iconfont.72aaaf10.ttf","72aaaf10eef0761064963a6c9e597474"],["https://breathlessway.github.io/react-app/static/media/iconfont.97cb7f12.eot","97cb7f12c677737f643d264d49a477cb"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,t){var a=new URL(e);return"/"===a.pathname.slice(-1)&&(a.pathname+=t),a.toString()},cleanResponse=function(e){if(!e.redirected)return Promise.resolve(e);return("body"in e?Promise.resolve(e.body):e.blob()).then(function(t){return new Response(t,{headers:e.headers,status:e.status,statusText:e.statusText})})},createCacheKey=function(e,t,a,s){var r=new URL(e);return s&&r.pathname.match(s)||(r.search+=(r.search?"&":"")+encodeURIComponent(t)+"="+encodeURIComponent(a)),r.toString()},isPathWhitelisted=function(e,t){if(0===e.length)return!0;var a=new URL(t).pathname;return e.some(function(e){return a.match(e)})},stripIgnoredUrlParameters=function(e,t){var a=new URL(e);return a.hash="",a.search=a.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(e){return t.every(function(t){return!t.test(e[0])})}).map(function(e){return e.join("=")}).join("&"),a.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var t=e[0],a=e[1],s=new URL(t,self.location),r=createCacheKey(s,hashParamName,a,/\.\w{8}\./);return[s.toString(),r]}));self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(e){return setOfCachedUrls(e).then(function(t){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(a){if(!t.has(a)){var s=new Request(a,{credentials:"same-origin"});return fetch(s).then(function(t){if(!t.ok)throw new Error("Request for "+a+" returned a response with status "+t.status);return cleanResponse(t).then(function(t){return e.put(a,t)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var t=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(e){return e.keys().then(function(a){return Promise.all(a.map(function(a){if(!t.has(a.url))return e.delete(a)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(e){if("GET"===e.request.method){var t,a=stripIgnoredUrlParameters(e.request.url,ignoreUrlParametersMatching),s="index.html";(t=urlsToCacheKeys.has(a))||(a=addDirectoryIndex(a,s),t=urlsToCacheKeys.has(a));var r="/react-app/index.html";!t&&"navigate"===e.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],e.request.url)&&(a=new URL(r,self.location).toString(),t=urlsToCacheKeys.has(a)),t&&e.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(a)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(t){return console.warn('Couldn\'t serve response for "%s" from cache: %O',e.request.url,t),fetch(e.request)}))}});